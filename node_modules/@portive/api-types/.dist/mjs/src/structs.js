import * as s from "superstruct";
import { AssertType } from "@thesunny/assert-type";
/**
 * Auth JWT Header
 */
export const AuthHeaderStruct = s.object({
    typ: s.literal("JWT"),
    alg: s.literal("HS256"),
    kid: s.string(),
});
AssertType.Equal(true);
/**
 * Auth JWT Payload
 */
export const AuthReservervedClaimsStruct = s.object({
    iat: s.number(),
    exp: s.number(),
});
export const AuthPrivateClaimsStruct = s.object({
    path: s.optional(s.string()),
    maxFileBytes: s.optional(s.number()),
    maxFileBytesMessage: s.optional(s.string()),
    maxImageSize: s.optional(s.object({
        width: s.number(),
        height: s.number(),
    })),
    tags: s.optional(s.array(s.string())),
    tagLimits: s.optional(s.array(s.object({
        tag: s.string(),
        maxTagBytes: s.number(),
        maxTagBytesMessage: s.optional(s.string()),
    }))),
});
export const AuthPayloadStruct = s.assign(AuthPrivateClaimsStruct, AuthReservervedClaimsStruct);
AssertType.Equal(true);
/**
 * UploadImageProps
 */
export const UploadPropsStruct = s.object({
    apiKey: s.optional(s.string()),
    authToken: s.optional(s.string()),
    data: s.object({
        clientFileInfo: s.union([
            s.object({
                type: s.literal("generic"),
                filename: s.string(),
                contentType: s.string(),
                bytes: s.number(),
            }),
            s.object({
                type: s.literal("image"),
                filename: s.string(),
                contentType: s.string(),
                bytes: s.number(),
                width: s.number(),
                height: s.number(),
            }),
        ]),
    }),
});
AssertType.Equal(true);
/**
 * UploadFileSuccessResponse
 */
export const UploadFileSuccessResponseStruct = s.object({
    status: s.literal("success"),
    data: s.object({
        formFields: s.record(s.string(), s.string()),
        apiUrl: s.string(),
        fileUrl: s.string(),
    }),
});
AssertType.Equal(true);
/**
 * GetURLMetadataProps
 */
export const GetURLMetadataPropsStruct = s.object({
    authToken: s.string(),
    url: s.string(),
});
AssertType.Equal(true);
