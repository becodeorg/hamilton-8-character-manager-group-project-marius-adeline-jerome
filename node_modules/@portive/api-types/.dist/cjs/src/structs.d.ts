import * as s from "superstruct";
/**
 * Auth JWT Header
 */
export declare const AuthHeaderStruct: s.Struct<{
    typ: "JWT";
    alg: "HS256";
    kid: string;
}, {
    typ: s.Struct<"JWT", "JWT">;
    alg: s.Struct<"HS256", "HS256">;
    kid: s.Struct<string, null>;
}>;
/**
 * Auth JWT Payload
 */
export declare const AuthReservervedClaimsStruct: s.Struct<{
    iat: number;
    exp: number;
}, {
    iat: s.Struct<number, null>;
    exp: s.Struct<number, null>;
}>;
export declare const AuthPrivateClaimsStruct: s.Struct<{
    path?: string | undefined;
    maxFileBytes?: number | undefined;
    maxFileBytesMessage?: string | undefined;
    maxImageSize?: {
        width: number;
        height: number;
    } | undefined;
    tags?: string[] | undefined;
    tagLimits?: {
        tag: string;
        maxTagBytes: number;
        maxTagBytesMessage?: string | undefined;
    }[] | undefined;
}, {
    path: s.Struct<string | undefined, null>;
    maxFileBytes: s.Struct<number | undefined, null>;
    maxFileBytesMessage: s.Struct<string | undefined, null>;
    maxImageSize: s.Struct<{
        width: number;
        height: number;
    } | undefined, {
        width: s.Struct<number, null>;
        height: s.Struct<number, null>;
    }>;
    tags: s.Struct<string[] | undefined, s.Struct<string, null>>;
    tagLimits: s.Struct<{
        tag: string;
        maxTagBytes: number;
        maxTagBytesMessage?: string | undefined;
    }[] | undefined, s.Struct<{
        tag: string;
        maxTagBytes: number;
        maxTagBytesMessage?: string | undefined;
    }, {
        tag: s.Struct<string, null>;
        maxTagBytes: s.Struct<number, null>;
        maxTagBytesMessage: s.Struct<string | undefined, null>;
    }>>;
}>;
export declare const AuthPayloadStruct: s.Struct<{
    iat: number;
    exp: number;
    path?: string | undefined;
    maxFileBytes?: number | undefined;
    maxFileBytesMessage?: string | undefined;
    maxImageSize?: {
        width: number;
        height: number;
    } | undefined;
    tags?: string[] | undefined;
    tagLimits?: {
        tag: string;
        maxTagBytes: number;
        maxTagBytesMessage?: string | undefined;
    }[] | undefined;
}, {
    iat: s.Struct<number, null>;
    exp: s.Struct<number, null>;
    path: s.Struct<string | undefined, null>;
    maxFileBytes: s.Struct<number | undefined, null>;
    maxFileBytesMessage: s.Struct<string | undefined, null>;
    maxImageSize: s.Struct<{
        width: number;
        height: number;
    } | undefined, {
        width: s.Struct<number, null>;
        height: s.Struct<number, null>;
    }>;
    tags: s.Struct<string[] | undefined, s.Struct<string, null>>;
    tagLimits: s.Struct<{
        tag: string;
        maxTagBytes: number;
        maxTagBytesMessage?: string | undefined;
    }[] | undefined, s.Struct<{
        tag: string;
        maxTagBytes: number;
        maxTagBytesMessage?: string | undefined;
    }, {
        tag: s.Struct<string, null>;
        maxTagBytes: s.Struct<number, null>;
        maxTagBytesMessage: s.Struct<string | undefined, null>;
    }>>;
}>;
/**
 * UploadImageProps
 */
export declare const UploadPropsStruct: s.Struct<{
    data: {
        clientFileInfo: {
            type: "generic";
            filename: string;
            contentType: string;
            bytes: number;
        } | {
            width: number;
            height: number;
            type: "image";
            filename: string;
            contentType: string;
            bytes: number;
        };
    };
    apiKey?: string | undefined;
    authToken?: string | undefined;
}, {
    apiKey: s.Struct<string | undefined, null>;
    authToken: s.Struct<string | undefined, null>;
    data: s.Struct<{
        clientFileInfo: {
            type: "generic";
            filename: string;
            contentType: string;
            bytes: number;
        } | {
            width: number;
            height: number;
            type: "image";
            filename: string;
            contentType: string;
            bytes: number;
        };
    }, {
        clientFileInfo: s.Struct<{
            type: "generic";
            filename: string;
            contentType: string;
            bytes: number;
        } | {
            width: number;
            height: number;
            type: "image";
            filename: string;
            contentType: string;
            bytes: number;
        }, null>;
    }>;
}>;
/**
 * UploadFileSuccessResponse
 */
export declare const UploadFileSuccessResponseStruct: s.Struct<{
    data: {
        formFields: Record<string, string>;
        apiUrl: string;
        fileUrl: string;
    };
    status: "success";
}, {
    status: s.Struct<"success", "success">;
    data: s.Struct<{
        formFields: Record<string, string>;
        apiUrl: string;
        fileUrl: string;
    }, {
        formFields: s.Struct<Record<string, string>, null>;
        apiUrl: s.Struct<string, null>;
        fileUrl: s.Struct<string, null>;
    }>;
}>;
/**
 * GetURLMetadataProps
 */
export declare const GetURLMetadataPropsStruct: s.Struct<{
    authToken: string;
    url: string;
}, {
    authToken: s.Struct<string, null>;
    url: s.Struct<string, null>;
}>;
