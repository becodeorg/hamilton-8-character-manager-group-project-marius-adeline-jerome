/**
 * Represents information about a file that exists on the Client (i.e. the
 * Browser)
 */
export declare type ClientGenericFileInfo = {
    type: "generic";
    filename: string;
    contentType: string;
    bytes: number;
};
export declare type ClientImageFileInfo = {
    type: "image";
    filename: string;
    contentType: string;
    bytes: number;
    width: number;
    height: number;
};
export declare type ClientFileInfo = ClientGenericFileInfo | ClientImageFileInfo;
/**
 * The `File` object itself and the `objectUrl` associated with the `File`.
 * These are useful additions to add to the `ClientFile` that the developer
 * can use to extract things like the `size` of an image and also an
 * `objectUrl` to use as the `src` for an `<img>` tag for example.
 */
declare type FileAndObjectUrl = {
    file: File;
    objectUrl: string;
};
/**
 * The ClientFileInfo along with the `File` object itself and an `objectUrl`.
 */
export declare type ClientGenericFile = ClientGenericFileInfo & FileAndObjectUrl;
export declare type ClientImageFile = ClientImageFileInfo & FileAndObjectUrl;
export declare type ClientFile = ClientGenericFile | ClientImageFile;
/**
 * Represents a file that exists on the Hosted service
 *
 * NOTE: It's possible that this isn't necessary
 */
export declare type HostedGenericFileInfo = {
    type: "generic";
    url: string;
};
export declare type HostedImageFileInfo = {
    type: "image";
    url: string;
    width: number;
    height: number;
};
export declare type HostedFileInfo = HostedGenericFileInfo | HostedImageFileInfo;
export declare type HostedGenericFile = HostedGenericFileInfo & {
    key: string;
};
export declare type HostedImageFile = HostedImageFileInfo & {
    key: string;
};
export declare type HostedFile = HostedGenericFile | HostedImageFile;
export {};
